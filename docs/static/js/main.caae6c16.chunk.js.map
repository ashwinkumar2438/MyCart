{"version":3,"sources":["Components/Product/Product.module.css","Components/Details/Details.module.css","Components/Product/Product.js","Components/Details/Details.js","Components/Checkout/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Product","props","mainbox","styles","imagebox","contentbox","buttonsbox","discountbox","itemdata","itemdetails","className","imagesrc","src","imgsrc","title","name","quantity","mrp","price","discount","onClick","addmethod","bind","id","removemethod","disabled","count","Details","style","detailbox","amount","checkout","Checkout","App","useState","data","setdata","totalAmount","setAmount","totalQuantity","setQuantity","page","setPage","useEffect","fetch","process","then","rawdata","json","console","log","items","addItem","alldata","find","a","total","Number","removeItem","map","item","key","val","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.caae6c16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"Product_mainbox__3y1l1\",\"discountbox\":\"Product_discountbox__pdOFm\",\"contentbox\":\"Product_contentbox__2hOts\",\"buttonsbox\":\"Product_buttonsbox__o41s-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailbox\":\"Details_detailbox__2VLc9\"};","import React from \"react\";\r\nimport styles from \"./Product.module.css\";\r\n\r\n\r\nconst Product=(props)=>{\r\n\r\n    let {mainbox,imagebox,contentbox,buttonsbox,discountbox}=styles;\r\n\r\n\r\n    let itemdata=props.itemdetails;\r\n\r\n    return (\r\n        <div className={mainbox}>\r\n            <div className={imagebox}>\r\n                {(itemdata.imagesrc)?<img src={itemdata.imgsrc} />:<div>No Image!</div>}\r\n            </div>\r\n            <div className={contentbox}>\r\n                <h3>{itemdata.title||\"\"}</h3>\r\n                <h5>{itemdata.name||\"\"}</h5>\r\n                <span>{itemdata.quantity||\"\"}</span>\r\n                <span>{itemdata.mrp?\"MRP \"+itemdata.mrp:null}</span>\r\n                <span>{itemdata.price?\"Rs \"+itemdata.price:null}</span>\r\n            </div>\r\n            <div className={discountbox}>\r\n                {itemdata.discount?`${itemdata.discount}% OFF`:null}\r\n            </div>\r\n            <div className={buttonsbox}>\r\n                <button onClick={props.addmethod.bind(null,itemdata.id)}>Add to Cart</button>\r\n                <button onClick={props.removemethod.bind(null,itemdata.id)} disabled={(itemdata.count<1)?true:false}>-</button>\r\n                <span>{itemdata.count}</span>\r\n                <button onClick={props.addmethod.bind(null,itemdata.id)}>+</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;","import React from \"react\";\r\nimport style from \"./Details.module.css\";\r\n\r\n\r\nconst Details=(props)=>{\r\n\r\n    return (\r\n        <div className={style.detailbox}>\r\n            <h5>Total Amount: {props.amount}</h5>\r\n            <button onClick={props.checkout.bind(null,\"checkout\")}>Checkout</button>\r\n            <h5>Quantity: {props.quantity}</h5>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;","import React from \"react\";\r\n\r\nconst Checkout=()=>{\r\n\r\n    return (\r\n        <div>Checkout!</div>\r\n    )\r\n}\r\n\r\nexport default Checkout;","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport {Product,Details,Checkout} from \"./Components\";\n\nfunction App() {\n  \n  let [data,setdata]=useState([]);\n  let [totalAmount,setAmount]=useState(0);\n  let [totalQuantity,setQuantity]=useState(0);\n  let[page,setPage]=useState(\"home\")\n  useEffect(()=>{\n    fetch(process.env.PUBLIC_URL+\"/data.json\").then(rawdata=>{\n      return rawdata.json()\n    }).then(data=>{\n      console.log(data);\n      setdata(data.items||[]);\n    })\n  },[])\n\n  let addItem=(id)=>{\n    let alldata=[...data];\n    let itemdetails=alldata.find(a=>a.id===id);\n    itemdetails.count++;\n    let total=totalAmount;\n    let quantity=totalQuantity;\n    total=Number(total)+Number(itemdetails.price);\n    quantity++;\n    setdata(alldata);\n    setAmount(total);\n    setQuantity(quantity);\n\n  };\n  let removeItem=(id)=>{\n    let alldata=[...data];\n    let itemdetails=alldata.find(a=>a.id===id);\n    if(itemdetails.count===0)return;\n    itemdetails.count--;\n    let total=totalAmount;\n    let quantity=totalQuantity;\n    total=Number(total)-Number(itemdetails.price);\n    quantity--;\n    setdata(alldata);\n    setAmount(total);\n    setQuantity(quantity);\n  }\n  let changePage=(val)=>{\n    setPage(val)\n  }\n  if(page===\"home\")return (\n    <div className=\"App\">\n      {data.map(item=><Product key={item.name} addmethod={addItem} removemethod={removeItem} itemdetails={{...item}}/>)}      \n      <Details amount={totalAmount} quantity={totalQuantity} checkout={changePage}></Details>\n    </div>\n  );\n  else return (\n    <div className=\"App\">\n      <Checkout></Checkout>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}